# For TOML reference
# https://learnxinyminutes.com/docs/toml/
[tool.poetry]
name = "mf-prior-bench"
version = "0.1.0"
description = ""
authors = ["eddiebergman <eddiebergmanhs@gmail.com>"]
license = "MIT"
packages = [{ include = "mfpbench" }]

[tool.poetry.dependencies]
python = ">=3.7.1,<=3.10"
pyyaml = "*"
tqdm = "*"
numpy = "1.*"
yahpo-gym = "1.0.1"
jahs-bench = { git = "https://github.com/automl/jahs_bench_201.git", rev = "v1.0.2" }
xgboost = "^1"


[tool.poetry.group.dev.dependencies]
ruff = "^0.0.177"
pytest = "4.6"
pytest-cov = "^3"
pytest-cases = "^3"
automl-sphinx-theme = "^0.1.12"
black = "^22.8.0"
pre-commit = "^2.20.0"
mypy = "^0.991"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"] # path to the test directory
minversion = "3.7"
# addopts = "--cov=mfpbench" # Should be package name

[tool.coverage.run]
branch = true
context = "mfpbench" # Should be package name
omit = [
  "mfpbench/__init__.py", # Has variables only needed for setup.py
]

[tool.coverage.report]
show_missing = true
skip_covered = true
exclude_lines = [
  "pragma: no cover",
  '\.\.\.',
  "raise NotImplementedError",
  "if TYPE_CHECKING",
] # These are lines to exclude from coverage

[tool.black]
target-version = ['py37']

[tool.ruff]
target-version = "py37"
line-length = 88
src = ["mfpbench", "tests"]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

select = [
  "E",
  "F",
  "Q",
  "W",
  "I",
  "D",
  "UP",
  "N",
  "S",
  "C",
  "B",
  "A",
  "T",
  "YTT",
  "RUF",
  "RUF100",
]
ignore = [
  # Documentation - Google style
  "D204",
  "D213",
  "D215",
  "D400",
  "D404",
  "D406",
  "D407",
  "D408",
  "D409",
  "D413",

  #
  "D100", # Missing docstring in public module
  "D101", # Missing docstring in public class
  "D102", # Missing docstring in public method
  "D103", # Missing docstring in public function
  "D105", # Missing docstring in magic mthod
  "D107", # Missing docstring in __init__
  "D203", # 1 blank line required before class docstring
  #
  "N801", # Class name should use CapWords
  "N802", # Function name should be lowercase
  "N803", # Argument name should be lowercase
  "N806", # Variable X in function should be lowercase
  "N815", # Variable in class scope should not be mixedCase
  #
  "E731", # Do not assign a lambda expression, use a def
  "A001", # Shadowing a builtin
  "A002", # Shadowing a builtin
  "A003", # Shadowing a builtin
  "S101", # Use of assert detected.
  "C901", # function is too complex
]

# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
]
per-file-ignores = { "tests/*.py" = [
  "S101",
  "D103",
  "ANN001",
  "ANN201",
  "D100",
] }

[tool.ruff.isort]
known-first-party = ["mfpbench"]


[[tool.mypy.overrides]]
module = [
  "ConfigSpace.*",
  "pandas.*",
  "jahs_bench.*",
  "yahpo_gym.*",
  "pytest.*",
  "yaml.*",
  "pytest_cases.*",
  "dehb.*",
  "sklearn.*",
  "scipy.*",
  "matplotlib.*",
]
ignore_missing_imports = true
